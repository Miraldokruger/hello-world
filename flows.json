[
    {
        "id": "871241e86895e73b",
        "type": "tab",
        "label": "Alertas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9246ec48caf9aafc",
        "type": "inject",
        "z": "871241e86895e73b",
        "name": "Load",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "str",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "f76c01f28d1cbf01",
                "54bb2c6cbef263df"
            ]
        ]
    },
    {
        "id": "f76c01f28d1cbf01",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "alcom",
        "func": "return {payload : msg.payload.d.alcom};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 360,
        "wires": [
            [
                "5e0f1968320bdf1c"
            ]
        ]
    },
    {
        "id": "5e0f1968320bdf1c",
        "type": "switch",
        "z": "871241e86895e73b",
        "name": "out",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "cf5930af1e46dac4"
            ]
        ]
    },
    {
        "id": "54bb2c6cbef263df",
        "type": "interval-length",
        "z": "871241e86895e73b",
        "format": "mills",
        "bytopic": false,
        "minimum": "",
        "maximum": "",
        "window": "",
        "timeout": false,
        "msgTimeout": "10000",
        "minimumunit": "msecs",
        "maximumunit": "msecs",
        "windowunit": "msecs",
        "msgTimeoutUnit": "msecs",
        "reset": false,
        "startup": false,
        "msgField": "payload",
        "timestampField": "timestamp",
        "repeatTimeout": false,
        "name": "",
        "x": 350,
        "y": 440,
        "wires": [
            [],
            [
                "baaae8eb5b42ca57"
            ]
        ]
    },
    {
        "id": "24c29a7a21b48819",
        "type": "debug",
        "z": "871241e86895e73b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "baaae8eb5b42ca57",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "out_time comm",
        "func": "var out_time= \"Sem comunicacao com a base.\";\nreturn { payload : out_time};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 440,
        "wires": [
            [
                "24c29a7a21b48819"
            ]
        ]
    },
    {
        "id": "5bc1dd824d56bc27",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "Alerta: BPM_out",
        "func": "var dado = msg.payload;\nvar mensagem = \"Batimentos cardiacos nao detectados\";\n\nif (dado == '0')\n{\n return {payload : mensagem};   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 140,
        "wires": [
            [
                "9ae7636416542063"
            ]
        ]
    },
    {
        "id": "9ae7636416542063",
        "type": "debug",
        "z": "871241e86895e73b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "71156418340bae02",
        "type": "inject",
        "z": "871241e86895e73b",
        "name": "Entrada: Area",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "200",
        "payloadType": "num",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "4bdeb79c0c51fb46"
            ]
        ]
    },
    {
        "id": "4bdeb79c0c51fb46",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "Flow_Area",
        "func": "\nvalor = flow.get('area')||msg.payload;\nflow.set('area', valor);\nreturn {payload : valor};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            [
                "e73e70c0fedc131c"
            ]
        ]
    },
    {
        "id": "e73e70c0fedc131c",
        "type": "debug",
        "z": "871241e86895e73b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 60,
        "wires": []
    },
    {
        "id": "90b1e8f18e2f51fd",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "Alerta_Fora_limites",
        "func": "var Area_total;\nvar Distancia_percorrida;\n\nDistancia_percorrida = msg.payload; \nArea_total = flow.get('area');\n\nif(Distancia_percorrida > Area_total)\n{\n    return {payload : \"Gado fora dos limites determinados\"};\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "7d175c35bd8574e5"
            ]
        ]
    },
    {
        "id": "7d287a55d5f42e95",
        "type": "inject",
        "z": "871241e86895e73b",
        "name": "Distancia percorrida",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "150",
        "payloadType": "num",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "90b1e8f18e2f51fd",
                "4d05ab67d5117d8d"
            ]
        ]
    },
    {
        "id": "7d175c35bd8574e5",
        "type": "debug",
        "z": "871241e86895e73b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "7619c914578d7967",
        "type": "inject",
        "z": "871241e86895e73b",
        "name": "BPM",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50.00",
        "payloadType": "num",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "5bc1dd824d56bc27"
            ]
        ]
    },
    {
        "id": "4d05ab67d5117d8d",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "Alerta: Aprox_area",
        "func": "var Area_total;\nvar Distancia_percorrida;\n\nDistancia_percorrida = msg.payload; \nArea_total = flow.get('area');\n\nif(Area_total - Distancia_percorrida <= '100')\n{\n    return {payload : \"Gado proximo dos limites determinados\"};\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 280,
        "wires": [
            [
                "7d175c35bd8574e5"
            ]
        ]
    },
    {
        "id": "cf5930af1e46dac4",
        "type": "function",
        "z": "871241e86895e73b",
        "name": "Alerta: Comm_Gado",
        "func": "var dado = msg.payload;\nvar mensagem = \"Sem comunicacao com o gado\";\n\nif (dado == '0')\n{\n return {payload : mensagem};   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 360,
        "wires": [
            [
                "7d3a2b9d1f26c04a"
            ]
        ]
    },
    {
        "id": "7d3a2b9d1f26c04a",
        "type": "debug",
        "z": "871241e86895e73b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 380,
        "wires": []
    }
]